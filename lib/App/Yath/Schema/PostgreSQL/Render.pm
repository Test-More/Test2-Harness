use utf8;
package App::Yath::Schema::PostgreSQL::Render;
our $VERSION = '2.000000';

package
    App::Yath::Schema::Result::Render;

# Created by DBIx::Class::Schema::Loader
# DO NOT MODIFY ANY PART OF THIS FILE

use strict;
use warnings;

use parent 'App::Yath::Schema::ResultBase';
__PACKAGE__->load_components(
  "InflateColumn::DateTime",
  "InflateColumn::Serializer",
  "InflateColumn::Serializer::JSON",
  "Tree::AdjacencyList",
  "UUIDColumns",
);
__PACKAGE__->table("renders");
__PACKAGE__->add_columns(
  "render_idx",
  {
    data_type         => "bigint",
    is_auto_increment => 1,
    is_nullable       => 0,
    sequence          => "renders_render_idx_seq",
  },
  "job_key",
  { data_type => "uuid", is_foreign_key => 1, is_nullable => 0, size => 16 },
  "event_id",
  { data_type => "uuid", is_foreign_key => 1, is_nullable => 0, size => 16 },
  "facet",
  { data_type => "varchar", is_nullable => 0, size => 64 },
  "tag",
  {
    data_type => "enum",
    extra => {
      custom_type_name => "tags",
      list => [
        "other",
        "ABOUT",
        "ARRAY",
        "BRIEF",
        "CONTROL",
        "CRITICAL",
        "DEBUG",
        "DIAG",
        "ENCODING",
        "ERROR",
        "FACETS",
        "FAIL",
        "FAILED",
        "FATAL",
        "HALT",
        "HARNESS",
        "KILL",
        "NO PLAN",
        "PASS",
        "PASSED",
        "PLAN",
        "REASON",
        "SHOW",
        "SKIP ALL",
        "SKIPPED",
        "STDERR",
        "TAGS",
        "TIMEOUT",
        "VERSION",
        "WARN",
        "WARNING",
      ],
    },
    is_nullable => 0,
  },
  "other_tag",
  {
    data_type => "varchar",
    default_value => \"null",
    is_nullable => 1,
    size => 8,
  },
  "message",
  { data_type => "text", is_nullable => 0 },
  "data",
  { data_type => "jsonb", is_nullable => 1 },
);
__PACKAGE__->set_primary_key("render_idx");
__PACKAGE__->belongs_to(
  "event",
  "App::Yath::Schema::Result::Event",
  { event_id => "event_id" },
  { is_deferrable => 0, on_delete => "CASCADE", on_update => "NO ACTION" },
);
__PACKAGE__->belongs_to(
  "job",
  "App::Yath::Schema::Result::Job",
  { job_key => "job_key" },
  { is_deferrable => 0, on_delete => "CASCADE", on_update => "NO ACTION" },
);


# Created by DBIx::Class::Schema::Loader v0.07052 @ 2024-05-17 12:15:14
# DO NOT MODIFY ANY PART OF THIS FILE

1;

__END__

=pod

=encoding UTF-8

=head1 NAME

App::Yath::Schema::PostgreSQL::Render - Autogenerated result class for Render in PostgreSQL.

=head1 SOURCE

The source code repository for Test2-Harness can be found at
L<http://github.com/Test-More/Test2-Harness/>.

=head1 MAINTAINERS

=over 4

=item Chad Granum E<lt>exodist@cpan.orgE<gt>

=back

=head1 AUTHORS

=over 4

=item Chad Granum E<lt>exodist@cpan.orgE<gt>

=back

=head1 COPYRIGHT

Copyright Chad Granum E<lt>exodist7@gmail.comE<gt>.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

See L<http://dev.perl.org/licenses/>

=cut
