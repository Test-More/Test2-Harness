name    = Test2-Harness
author  = Chad Granum <exodist@cpan.org>
license = Perl_5
copyright_holder = Chad Granum

[RewriteVersion] ; sets dist version from main module's $VERSION
[License]
[ManifestSkip]
[Manifest]
[NextRelease]
[GatherFile]
filename = .yath.rc

[GatherDir]
exclude_match = ^xt/downstream      ; only run these tests locally
exclude_match = ^pt                 ; only run these tests locally
exclude_match = ^tt                 ; only run these tests locally
exclude_match = ^release-scripts
exclude_match = ^cover
exclude_match = ^nyt
exclude_match = ^test-logs
exclude_match = ^t/
exclude_match = ^t2/
exclude_filename = LICENSE
exclude_filename = Makefile.PL
exclude_filename = cpanfile
exclude_filename = README
exclude_filename = README.md
exclude_filename = .yath-persist.json

[Git::GatherDir / GatherDotFilesT]
root = t/
prefix = t/
include_dotfiles = 1

[Git::GatherDir / GatherDotFilesT2]
root = t2/
prefix = t2/
include_dotfiles = 1

[Run::AfterBuild]
run = release-scripts/generate_command_pod.pl %d

[ExecDir]
dir = scripts

[PodSyntaxTests]
[TestRelease]

[MetaResources]
bugtracker.web  = http://github.com/Test-More/Test2-Harness/issues
repository.url  = http://github.com/Test-More/Test2-Harness/
repository.type = git

[Prereqs]
perl                       = 5.010000
Test2                      = 1.302170
Test2::API                 = 1.302170
Test2::Event               = 1.302170
Test2::Event::V2           = 1.302170
Test2::Formatter           = 1.302170
Test2::Util                = 1.302170
Test::Builder              = 1.302170
Test::Builder::Formatter   = 1.302170
Test::More                 = 1.302170
Test2::Tools::AsyncSubtest = 0.000127
Test2::Require::Module     = 0.000127
Test2::Tools::Subtest      = 0.000127
Test2::Util::Term          = 0.000127
Test2::V0                  = 0.000127
Test2::Bundle::Extended    = 0.000127
Test2::Plugin::MemUsage    = 0.002002
Test2::Plugin::UUID        = 0.002001
Long::Jump                 = 0.000001
;Test2::Plugin::DBIProfile  = 0.002002 ; soon
Term::Table                = 0.015
Importer                   = 0.025
goto::file                 = 0.005
File::Path                 = 2.11
List::Util                 = 1.44
IO::Handle                 = 1.27
Data::UUID                 = 1.148
File::Find                 = 0
Carp                       = 0
Config                     = 0
Cwd                        = 0
Data::Dumper               = 0
Exporter                   = 0
Fcntl                      = 0
File::Spec                 = 0
File::Temp                 = 0
Filter::Util::Call         = 0
IO::Compress::Bzip2        = 0
IO::Compress::Gzip         = 0
IO::Uncompress::Bunzip2    = 0
IO::Uncompress::Gunzip     = 0
IPC::Cmd                   = 0
IPC::Open3                 = 0
JSON::PP                   = 0
Module::Pluggable          = 0
POSIX                      = 0
Scalar::Util               = 0
Symbol                     = 0
Time::HiRes                = 0
base                       = 0
constant                   = 0
parent                     = 0
Sys::Hostname              = 0
Scope::Guard               = 0

[Prereqs / TestRequires]
File::Copy   = 0
Carp::Always = 0

[Prereqs / DevelopRequires]
Test::Spelling = 0.12   ; for xt/author/pod-spell.t

[Prereqs / RuntimeSuggests]
JSON::MaybeXS    = 0
Cpanel::JSON::XS = 0
Term::ANSIColor  = 4.03
Email::Stuffer   = 0.016
HTTP::Tiny       = 0.070

[DynamicPrereqs]
:version = 0.018
-delimiter = |
-body = |if ($^O eq 'Win32') {
-body = |    $WriteMakefileArgs{META_MERGE}{'meta-spec'} = { version => 2 };
-body = |    $WriteMakefileArgs{META_MERGE}{prereqs}{runtime}{suggests}{'Win32::Console::ANSI'} = 0;
-body = |}

[MakeMaker]
[CPANFile]
[MetaYAML]
[MetaJSON]

; authordep Pod::Markdown
[ReadmeFromPod / Markdown]
filename = lib/App/Yath.pm
type = markdown
readme = README.md

[ReadmeFromPod / Text]
filename = lib/App/Yath.pm
type = text
readme = README

[CopyFilesFromBuild]
copy = LICENSE
copy = cpanfile
copy = README
copy = README.md
copy = Makefile.PL

[Git::Check]
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes

[Git::Commit]
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes

[Git::Tag]

[FakeRelease]

[BumpVersionAfterRelease]

[Git::Commit / Commit_Changes]
munge_makefile_pl = true
allow_dirty_match = ^lib
allow_dirty_match = ^scripts
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
commit_msg = Automated Version Bump
