name: testsuite

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:

  #
  # A basic and simple test run
  #

  ubuntu:
    name: "simple testrun"
    env:
      PERL_USE_UNSAFE_INC: 0
      AUTHOR_TESTING: 1
      AUTOMATED_TESTING: 1
      RELEASE_TESTING: 1
      PERL_CARTON_PATH: $GITHUB_WORKSPACE/local

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: perl -V
      - name: install dependencies from cpanfile.ci
        uses: perl-actions/install-with-cpm@v1
        with:
          cpanfile: "cpanfile.ci"
      - name: install dependencies from cpanfile
        uses: perl-actions/install-with-cpm@v1
        with:
          cpanfile: "cpanfile"          
      - run: perl Makefile.PL
      - run: make
      - run: make test

  #
  # Only trigger the matrix if the testsuite pass above
  #

  perl-versions:
    runs-on: ubuntu-latest
    name: List Perl versions
    outputs:
      perl-versions: ${{ steps.action.outputs.perl-versions }}
    steps:
      - id: action
        uses: perl-actions/perl-versions@v1
        with:
          since-perl: v5.10
          with-devel: true

  perl:
    name: "Perl v${{ matrix.perl-version }}"
    needs: [ubuntu,perl-versions]
    runs-on: ubuntu-latest

    env:
       PERL_USE_UNSAFE_INC: 0
       AUTHOR_TESTING: 1
       AUTOMATED_TESTING: 1
       RELEASE_TESTING: 1
       PERL_CARTON_PATH: $GITHUB_WORKSPACE/local
       T2_NO_FORK: 1

    strategy:
      fail-fast: false
      matrix:
        perl-version: ${{ fromJson (needs.perl-versions.outputs.perl-versions) }}

    container: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v4
      - run: perl -V
      - name: Install Dependencies
        run: |
          cpm install -g --show-build-log-on-failure --cpanfile cpanfile.ci
          cpm install -g --show-build-log-on-failure --cpanfile cpanfile
      - run: perl Makefile.PL
      - run: make
      - run: make test
