div.event {
    margin-top: 2px;
    margin-bottom: 2px;
    border-bottom: 2px solid #C0C0C0;
}

div.event.orphan table {
    font-style: italic;
    color: #A0A0A0;
}
div.event.orphan table:hover {
    color: black;
}

div.event.no_lines table {
    color: #A0A0A0;
}
div.event.no_lines table:hover {
    color: black;
}

div.event > table > tr.facet_data {
    display: none;
}

div.event > table {
    border-collapse: collapse;
    width: 100%;
    table-layout: fixed;
}

div.event td.event_content {
    padding: 0px;
    overflow: hidden;
}

div.event td.event_content pre {
    padding: 1px;
    overflow: auto;
    padding-left: 4px;
}

div.event td.event_content pre {
    border-left: 1px solid transparent;
}

div.event.nested td.event_content pre {
    border-left: 1px solid #A0A0A0;
}

div.event td.event_content, div.event td.event_content pre {
    font-size: 16px;
    margin: 0;
}

div.event > table > tr {
    border-top: 1px dotted #C0C0C0;
    max-width: 100%;
}

div.event > table > tr:first-child {
    border-top: none;
}

div.event > table > tr > th {
    vertical-align: top;
    width: 8ch;
    font-weight: normal;
    white-space: nowrap;
}

div.event > table > tr > td.controls, div.event > table > tr > td.no_controls {
    vertical-align: top;
    width: 2ch;
}

div.subtest_control.etoggle {
    display: block;
    width: 2ch;
    float: left;
    text-align: center;
    margin-left: -2.2ch;
    margin-right: -2.2ch;
}

div.subtest_control.etoggle:after {
    content: '+';
}

div.subtest_control.etoggle.clicked:after {
    content: '-';
}

.etoggle {
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
}

.etoggle:hover, .etoggle.clicked {
    border-color: #AABBFF;
    background: #DDEEFF;
}

.etoggle.clicked:hover {
    background: inherit;
}

div.event > table > tr > td.controls > div {
    display: block;
    float: left;
    width: 2ch;
}

div.event > table > tr > td.left, div.event > table > tr > td.right {
    vertical-align: top;
    width: 1ch;
}
div.event > table > tr > td.left:after {
    font-weight: bold;
    content: '[';
    text-align: center;
}
div.event > table > tr > td.right:before {
    font-weight: bold;
    content: ']';
    text-align: center;
}

div.event div.expander.facets {
    border-radius: 0;
    border: none;
    padding: 0px;
    margin: none;
    background: inherit;
}

div.event div.expander.facets > div.expander-head {
    border: none;
    border-radius: 0;
    background: inherit;
}

div.event div.expander.facets > div.expander-body {
    margin: 0;
}


/*

        'DEBUG'    => Term::ANSIColor::color('red'),
        'DIAG'     => Term::ANSIColor::color('yellow'),
        'ERROR'    => Term::ANSIColor::color('red'),
        'FATAL'    => Term::ANSIColor::color('bold red'),
        'FAIL'     => Term::ANSIColor::color('red'),
        'HALT'     => Term::ANSIColor::color('bold red'),
        'PASS'     => Term::ANSIColor::color('green'),
        '! PASS !' => Term::ANSIColor::color('cyan'),
        'TODO'     => Term::ANSIColor::color('cyan'),
        'NO  PLAN' => Term::ANSIColor::color('yellow'),
        'SKIP'     => Term::ANSIColor::color('bold cyan'),
        'SKIP ALL' => Term::ANSIColor::color('bold white on_blue'),
        'STDERR'   => Term::ANSIColor::color('yellow'),
        'RUN INFO' => Term::ANSIColor::color('bold bright_blue'),
        'JOB INFO' => Term::ANSIColor::color('bold bright_blue'),
        'LAUNCH'   => Term::ANSIColor::color('bold bright_white'),
        'PASSED'   => Term::ANSIColor::color('bold bright_green'),
        'FAILED'   => Term::ANSIColor::color('bold bright_red'),
        'REASON'   => Term::ANSIColor::color('magenta'),
        'TIMEOUT'  => Term::ANSIColor::color('magenta'),
        'TIME'     => Term::ANSIColor::color('blue'),

sub DEFAULT_FACET_COLOR() {
        time    => Term::ANSIColor::color('blue'),
        about   => Term::ANSIColor::color('magenta'),
        amnesty => Term::ANSIColor::color('cyan'),
        assert  => Term::ANSIColor::color('bold bright_white'),
        control => Term::ANSIColor::color('bold red'),
        error   => Term::ANSIColor::color('yellow'),
        info    => Term::ANSIColor::color('yellow'),
        meta    => Term::ANSIColor::color('magenta'),
        parent  => Term::ANSIColor::color('magenta'),
        trace   => Term::ANSIColor::color('bold red'),

my %FACET_TAG_BORDERS = (
    'default' => ['[', ']'],
    'amnesty' => ['{', '}'],
    'info'    => ['(', ')'],
    'error'   => ['<', '>'],
    'parent'  => [' ', ' '],
);
*/
